// @flow
/**
 * Flowtype definitions for MongoMemoryServer
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.7.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

import { ChildProcess } from "child_process";
import MongoInstance from "./util/MongoInstance";
import { MongoBinaryOpts } from "./util/MongoBinary";
import {
  CallbackFn,
  DebugFn,
  MongoMemoryInstancePropT,
  StorageEngineT,
  SpawnOptions
} from "./types";
export interface MongoMemoryServerOptsT {
  instance?: MongoMemoryInstancePropT;
  binary?: MongoBinaryOpts;
  debug?: boolean;
  spawn?: SpawnOptions;
  autoStart?: boolean;
}
export interface MongoInstanceDataT {
  port: number;
  dbPath: string;
  dbName: string;
  uri: string;
  storageEngine: StorageEngineT;
  instance: MongoInstance;
  childProcess: ChildProcess;
  tmpDir?: {
    name: string,
    removeCallback: CallbackFn
  };
  replSet?: string;
}
declare export default class MongoMemoryServer {
  runningInstance: Promise<MongoInstanceDataT> | null;
  opts: MongoMemoryServerOptsT;
  debug: DebugFn;
  constructor(opts?: MongoMemoryServerOptsT): this;
  start(): Promise<boolean>;
  _startUpInstance(): Promise<MongoInstanceDataT>;
  stop(): Promise<boolean>;
  getInstanceData(): Promise<MongoInstanceDataT>;
  getUri(otherDbName?: string | boolean): Promise<string>;
  getConnectionString(otherDbName?: string | boolean): Promise<string>;
  getPort(): Promise<number>;
  getDbPath(): Promise<string>;
  getDbName(): Promise<string>;
}
